version: '3.8'

services:
  # Certificate download service
  cert-downloader:
    image: alpine
    volumes:
      - ./certs:/certs
    entrypoint:
      - /bin/sh
      - -c
      - |
        apk add --no-cache curl &&
        curl -o /certs/global-bundle.pem https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem &&
        chmod 644 /certs/*.pem &&
        echo "Certificate bundle downloaded successfully"
    restart: 'no'

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.build # Use the improved build Dockerfile
    container_name: dh-portfolio-frontend
    restart: unless-stopped
    ports:
      - '3000:80'
    environment:
      - NODE_ENV=production
      - VITE_API_URL=/
    networks:
      - app-network
    depends_on:
      - backend
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost/health']
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dh-portfolio-backend
    restart: unless-stopped
    ports:
      - '5000:5000'
    environment:
      - NODE_ENV=production
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      # Temporarily disable SSL for testing
      # - DB_SSL_CA=${DB_SSL_CA:-/etc/ssl/certs/global-bundle.pem}
      # - DB_SSL_MODE=${DB_SSL_MODE:-VERIFY_IDENTITY}
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
      - ./certs:/etc/ssl/certs:ro
    depends_on:
      - cert-downloader
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:5000/health']
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app-network:
    driver: bridge
